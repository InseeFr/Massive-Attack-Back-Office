name: Release & Docker

on:
  push:
    branches:
      - "master"
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17
      - name: Build with Maven
        run: mvn install --file pom.xml --batch-mode --no-transfer-progress
      - name: Upload war
        uses: actions/upload-artifact@v4
        with:
          name: war
          path: target/*.war
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
      - name: Get current version
        id: version
        run: echo "::set-output name=prop::$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - run: echo ${{steps.version.outputs.prop}}
      - name: Release snapshot
        id: release_snapshot
        uses: actions/create-release@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.version.outputs.prop}}
          release_name: Release ${{steps.version.outputs.prop}}
          draft: false
          prerelease: false
  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download build
        id: download
        uses: actions/download-artifact@v4
        with:
          name: war
          path: target/
      - name: Get current version
        id: version
        run: echo "::set-output name=prop::$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - run: echo ${{steps.version.outputs.prop}}
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: inseefr/massive-attack-back-office
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          tags: ${{steps.version.outputs.prop}}
